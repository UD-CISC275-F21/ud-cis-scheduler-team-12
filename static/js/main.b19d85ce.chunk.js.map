{"version":3,"sources":["assets/courses.js","components/CourseComp.tsx","components/ClearSemesterButton.tsx","assets/buttonList.js","components/Board.tsx","components/SearchBar.tsx","components/DisplayCourses.tsx","components/SideMenu.tsx","components/Calender.tsx","components/SemesterComp.tsx","components/DegreePlan.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["courseData","CourseComp","course","SET_SEMESTER_MAP","SEMESTER_MAP","semesterSelect","Card","className","style","width","Container","Row","Col","Title","name","onClick","id","NEW_SEMESTER_MAP","filter","item","removeCourse","Body","Text","timeStart","timeEnd","schedule","Accordion","Item","eventKey","Header","description","ClearSemesterButton","buttonList","value","Board","setSemesterSelect","setSemesterHeader","semesterHeader","classListToPrint","buttonToggle","ToggleButtonGroup","onChange","val","map","radio","idx","ToggleButton","type","variant","length","xs","md","SearchBar","setQuery","placeholder","event","target","DisplayCourses","useState","query","addCourse","foundCourse","includes","findCourse","alert","push","post","toLowerCase","SideMenu","setVisibleView","Nav","justify","defaultActiveKey","onSelect","Link","Calender","fluid","SemesterComp","courseList","semesterIndex","isToggle","setIsToggle","selectToggle","key","Table","scope","DegreePlan","SEMESTER_MAP_TO_PRINT","Object","entries","App","visibleView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b19d85ce.chunk.js","sourcesContent":["const courseData =[\n    {\n        \"id\": 0,\n        \"name\": \"CISC 100\",\n        \"timeStart\": 1200,\n        \"timeEnd\": 1300,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Science 100, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 1,\n        \"name\": \"CISC 200\",\n        \"timeStart\": 1400,\n        \"timeEnd\": 1500,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Science 200, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 2,\n        \"name\": \"CISC 300\",\n        \"timeStart\": 1200,\n        \"timeEnd\": 1300,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Science 300, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 3,\n        \"name\": \"MATH 100\",\n        \"timeStart\": 1530,\n        \"timeEnd\": 1630,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Mathematics 100, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 4,\n        \"name\": \"MATH 200\",\n        \"timeStart\": 1330,\n        \"timeEnd\": 1430,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Mathematics 200, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 5,\n        \"name\": \"ENGL 100\",\n        \"timeStart\": 1700,\n        \"timeEnd\": 1800,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is English 100, section 10.\",\n        \"credits\": 3\n    },\n    {\n        \"id\": 6,\n        \"name\": \"CPEG 100\",\n        \"timeStart\": 1700,\n        \"timeEnd\": 1800,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Compueter Engineering 100, section 10.\",\n        \"credits\": 3\n    }\n\n];\nexport default courseData;","import React from \"react\";\nimport { Card,Col, Row, Container, Accordion } from \"react-bootstrap/\";\nimport \"../css/courses.css\";\nimport \"../assets/courses\";\nimport { Course } from \"../interfaces/course\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nimport courseData from \"../assets/courses\";\n\n\nfunction CourseComp({ course, SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    course: Course,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    semesterSelect: string | null\n}):  JSX.Element {\n    \n    function removeCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        NEW_SEMESTER_MAP[\"\"+semesterSelect] = NEW_SEMESTER_MAP[\"\"+semesterSelect].filter(item => item !== courseData[id]);\n        SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n    }\n\n    function editDescription() {\n        <form>\n            <label>\n                Name:\n                <input type=\"text\" name=\"name\" />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>;\n    }\n\n\n    return (\n        <div>\n            \n            <Card className=\"card\" style={{ width: \"19rem\" }}>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Card.Title>{course.name}</Card.Title>\n                        </Col>\n                        <Col>\n                            <button className=\"delete-button\" onClick={() => removeCourse(course.id)}>\n                                <MdDeleteForever></MdDeleteForever></button>\n                        </Col>                        \n\n                    </Row>\n                </Container>\n                <Card.Body className=\"card-body\">\n\n                    <Card.Text>\n                    From: {course.timeStart} To: {course.timeEnd}\n                    </Card.Text>\n\n                    <Card.Text>\n                    Days: {course.schedule}\n                    </Card.Text>\n\n                    <Col className=\"column-dropdown\">\n                    </Col>\n\n                    <Col className=\"card-accordion\">\n                        <Accordion>\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>Details</Accordion.Header>\n                                <Accordion.Body>\n                                    <button className=\"edit-button\" onClick={() => editDescription()}>\n                                        <GrEdit></GrEdit></button>\n                                    Course description: {course.description}\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </Col>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default CourseComp;\n\n/*\n            <Accordion defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Accordion Item #1</Accordion.Header>\n                    <Accordion.Body>\n                        bruh\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n*/\n","import React from \"react\";\nimport { Course } from \"../interfaces/course\";\n\nexport default function ClearSemesterButton({ SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, \n    SEMESTER_MAP: Record<string, Course[]>, semesterSelect: string | null\n}): JSX.Element {\n\n    function removeAllCourses() {\n        SET_SEMESTER_MAP({...SEMESTER_MAP, [\"\"+semesterSelect]: []}); // Set classList to an empty array to clear all selected courses\n    }\n\n    return (\n        <button onClick={removeAllCourses}>Clear All Courses</button>\n    );\n}\n","const buttonList = [\n    { name: \"Fall 1\", value: 1 },\n    { name: \"Spring 1\", value: 2 },\n    { name: \"Fall 2\", value: 3 },\n    { name: \"Spring 2\", value: 4 },\n    { name: \"Fall 3\", value: 5 },\n    { name: \"Spring 3\", value: 6 },\n    { name: \"Fall 4\", value: 7 },\n    { name: \"Spring 4\", value: 8 },\n];\nexport default buttonList;\n","import React from \"react\";\nimport { Col, Row, Container, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport CourseComp from \"./CourseComp\";\nimport ClearSemesterButton from \"./ClearSemesterButton\";\nimport \"../css/board.css\";\nimport { Course } from \"../interfaces/course\";\n\nimport buttonList from \"../assets/buttonList\";\n\nexport function Board({ setSemesterSelect, semesterSelect, SET_SEMESTER_MAP, SEMESTER_MAP, setSemesterHeader, semesterHeader }: {\n    setSemesterSelect: (s: string | null) => void, semesterSelect: string | null,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterHeader: (s: string) => void, semesterHeader: string\n}):  JSX.Element {\n\n    // const list variable to map out classList useState variable\n    const classListToPrint = SEMESTER_MAP[\"\"+semesterSelect];\n\n    const buttonToggle = \"\"+semesterSelect;\n\n    function handleSelect (val: number) {\n        setSemesterSelect(\"\"+val);\n        setSemesterHeader(buttonList[val-1].name);\n    }\n\n    return (\n        <div>\n            <div>\n                <h2>Semester View - {semesterHeader}</h2>\n                <ToggleButtonGroup className=\"semester-button\" name=\"options\" value={+buttonToggle} onChange={handleSelect}>\n                    {buttonList.map((radio, idx) =>\n                        <ToggleButton\n                            key={idx}\n                            id={`radio-${idx}`}\n                            type=\"radio\"\n                            variant={ SEMESTER_MAP[\"\"+radio.value].length > 0 ? \"outline-success\" : \"outline-danger\"}\n                            name=\"radio\"\n                            value={radio.value}\n                        >\n                            {radio.name}\n                        </ToggleButton>\n                    )}\n                </ToggleButtonGroup>\n            </div>\n\n            <div>\n                <Container>\n                    <Row xs={1} md={3}>\n                        {classListToPrint.map(classListToPrint =>\n                            <Col key={classListToPrint.id}>\n                                <CourseComp\n                                    course={classListToPrint}\n                                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                                    SEMESTER_MAP={SEMESTER_MAP}\n                                    semesterSelect={semesterSelect}\n                                ></CourseComp>\n                            </Col>\n                        )}\n                    </Row>\n                </Container>\n                { SEMESTER_MAP[\"\"+semesterSelect].length > 0 && <ClearSemesterButton\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    semesterSelect={semesterSelect}\n                ></ClearSemesterButton> }\n            </div>\n\n        </div>\n    );\n}","import React from \"react\";\n\nexport default function SearchBar({ setQuery }: {\n    setQuery: (q: string) => void\n}): JSX.Element {\n    return(\n        <div>\n            <input placeholder=\"Search For Course\" onChange={event => setQuery(event.target.value)}/>\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport courseData from \"../assets/courses\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Course } from \"../interfaces/course\";\n\nimport \"../css/DisplayCourses.css\";\nimport SearchBar from \"./SearchBar\";\n\nexport default function DisplayCourses({ SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    semesterSelect: string | null\n}): JSX.Element {\n\n    const [query, setQuery] = useState<string>(\"\");\n\n    function addCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        const foundCourse = findCourse(id);\n        \n        // If there are less than 6 courses, add the selected course onto the end of the classList\n        if (foundCourse) {\n            alert(`${courseData[id].name} is already added to this semester. Please select another course.`);\n        } else {\n            // for (const [key, value] of Object.entries(SEMESTER_MAP)) {\n            //     console.log(key,value);\n            //     if (SEMESTER_MAP[key].includes(courseData[id])) {\n            //         alert(`Warning: ${courseData[id].name} is already added to semester ${key}.`);\n            //     }\n            // }\n            SEMESTER_MAP[\"\"+semesterSelect].length === 6 ? alert(\"Max number of courses selected for semester.\")\n                : (NEW_SEMESTER_MAP[\"\"+semesterSelect].push(courseData[id]), SET_SEMESTER_MAP(NEW_SEMESTER_MAP));\n        }\n    }\n\n    function findCourse(id: number) {\n        return SEMESTER_MAP[\"\"+semesterSelect].includes(courseData[id]);\n    }\n\n    return (\n        <div>\n            <p>Course Search</p>\n            <SearchBar\n                setQuery={setQuery}\n            ></SearchBar>\n            {courseData.filter(post => {\n                if (query === \"\") {\n                    return post;\n                } else if (post.name.toLowerCase().includes(query.toLowerCase())) {\n                    return post;\n                }\n            }).map(courseData => \n                <p className=\"course\" key={courseData.id}>{courseData.name}\n                    <button className=\"add-button\" onClick={() => addCourse(courseData.id)}>\n                        <MdAdd />\n                    </button>\n                </p>\n            )}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap/\";\n\nexport default function SideMenu( {setVisibleView} : {\n    setVisibleView: (s: string | null) => void\n}): JSX.Element {\n\n    const handleSelect = (eventKey: string | null) => setVisibleView(eventKey);\n\n    return (\n        <Nav justify variant=\"pills\" className=\"flex-column\" defaultActiveKey=\"1\" onSelect={handleSelect}>\n            <Nav.Item>\n                <Nav.Link eventKey=\"1\">Semester View</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"2\">Degree Plan View</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"3\">Calendar View</Nav.Link>\n            </Nav.Item>\n  \n        </Nav>\n    );\n}","import React from \"react\";\nimport { Row, Col, Container} from \"react-bootstrap\";\nimport \"../css/calender.css\";\n//import { Weekday, Date } from \"../interfaces/weekday\";\n//import Weekdays from \"../assets/weekdays\";\n//import Hours from \"../assets/hours\";\n\n/**\n * \n * export function Calender({ setNumberOfCourses, numberOfCourses, courseID }: {\n    setNumberOfCourses: (s: number) => void,  numberOfCourses: number, courseID: number\n}):  JSX.Element {\n\n * at symbol returns \n */\n\nexport function Calender():  JSX.Element {\n    return (\n        <div>\n            <Container fluid>\n              \n                <h2>Calender</h2>\n                <Container className=\"cal-header\">\n                    <Row className=\"row justify-content-evenly no-gutters\">\n                        <Col className=\"col-1\">\n                            <h5>Hours</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Monday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Tuesday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Wednesday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Thursday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Friday</h5>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Container>    \n        </div>\n    );\n}\n\n/**\n * \n * \n * DONT DELETE!!!!\nexport function Calender():  JSX.Element {\n    return (\n        <Container>\n            <h2>Calender</h2>\n            <Row>\n                <div className=\"cal-container\">\n                    {Weekdays.map(day => \n                        <div key={day.id}>{day.name}</div>\n                    )}\n                </div>\n            </Row>\n            <Row>\n                <div className = \"cal-background\">\n                    <Col>\n                        <div>\n                            {Hours.map(value =>\n                                <div key={value.id}>{value.time}</div>\n                            )}\n                        </div>\n                    </Col>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\n\n*/\n\nexport default Calender;","import React, { useState } from \"react\";\nimport { Card, Table } from \"react-bootstrap/\";\nimport \"../css/courses.css\";\nimport \"../assets/courses\";\nimport { Course } from \"../interfaces/course\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { ImCross, ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport courseData from \"../assets/courses\";\n\nimport buttonList from \"../assets/buttonList\";\n\nfunction SemesterComp({ SET_SEMESTER_MAP, SEMESTER_MAP, courseList, setSemesterSelect, semesterSelect, setSemesterHeader }: {\n    courseList: Course[],\n    setSemesterSelect: (s: string | null) => void, semesterSelect: string | null,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterHeader: (s: string) => void\n}):  JSX.Element {\n\n    const semesterIndex = \"\"+semesterSelect;\n\n    // const SELECT_MAP_INIT: Record<string, boolean> = {\n    //     \"1\": false,\n    //     \"2\": false,\n    //     \"3\": false,\n    //     \"4\": false,\n    //     \"5\": false,\n    //     \"6\": false,\n    //     \"7\": false,\n    //     \"8\": false,\n    // };\n    // const [SELECT_MAP, SET_SELECT_MAP] = useState<Record<string, boolean>>(SELECT_MAP_INIT);\n    const [isToggle, setIsToggle] = useState<boolean>(false);\n\n    function selectToggle(key: string) {\n        // const NEW_SELECT_MAP = {...SELECT_MAP};\n        \n        // Object.keys(NEW_SELECT_MAP).forEach(item => {\n        //     item === key ? (NEW_SELECT_MAP[item] = true, SET_SELECT_MAP(NEW_SELECT_MAP), setIsToggle(NEW_SELECT_MAP[item])) \n        //         : (NEW_SELECT_MAP[item] = false, SET_SELECT_MAP(NEW_SELECT_MAP));\n        // });\n\n\n        // Object.keys(NEW_SELECT_MAP).forEach(item => {\n        //     setIsToggle(NEW_SELECT_MAP[item]); \n        // });\n\n        // NEW_SELECT_MAP[key] = true;\n        // SET_SELECT_MAP(NEW_SELECT_MAP);\n        \n        // Object.keys(NEW_SELECT_MAP).forEach(item => {\n        //     setIsToggle(NEW_SELECT_MAP[item].valueOf()); \n        // });\n        // console.log(NEW_SELECT_MAP);\n\n        setIsToggle(!isToggle);\n        setSemesterSelect(key);\n        handleSelect(key);\n        // console.log(semesterSelect);\n    }\n\n    function handleSelect (val: string) {\n        setSemesterHeader(buttonList[+val-1].name);\n    }\n\n    function removeCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        NEW_SEMESTER_MAP[\"\"+semesterSelect] = NEW_SEMESTER_MAP[\"\"+semesterSelect].filter(item => item !== courseData[id]);\n        SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n        setSemesterSelect(semesterSelect);\n    }\n\n    function removeAllCourses() {\n        SET_SEMESTER_MAP({...SEMESTER_MAP, [\"\"+semesterSelect]: []}); // Set classList to an empty array to clear all selected courses\n    }\n\n    return (\n        <div>\n            <Card className=\"card\" style={{ width: \"30rem\" }}>\n                <button className=\"delete-button\" onClick={removeAllCourses}>\n                    <MdDeleteForever></MdDeleteForever>\n                </button>\n                { !isToggle && <button className=\"select-button-off\" onClick={() => selectToggle(\"\"+semesterSelect)}>\n                    <ImRadioUnchecked></ImRadioUnchecked> \n                </button>}\n                { isToggle && <button className=\"select-button-on\" onClick={() => selectToggle(\"\"+semesterSelect)}>\n                    <ImRadioChecked></ImRadioChecked>\n                </button>}\n                <Card.Body className=\"card-body\">\n                    \n                    <Table>\n                        <thead>\n                            <th className=\"semester-title\">{buttonList[+semesterIndex-1].name}</th>\n                            <tr>\n                                <th>Course</th>\n                                <th scope=\"col\">Credit(s)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {courseList.map((course, id) => {\n                                return(\n                                    <tr key={id}>\n                                        <th>{course.name}</th>\n                                        <td>{course.id}</td>\n                                        <button className=\"delete-course\" onClick={() => removeCourse(course.id)}>\n                                            <ImCross></ImCross>\n                                        </button>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default SemesterComp;\n","import React from \"react\";\nimport { Row, Col, Container} from \"react-bootstrap\";\nimport \"../css/calender.css\";\n// import CourseComp from \"./CourseComp\";\nimport SemesterComp from \"./SemesterComp\";\n// import ClearSemesterButton from \"./ClearSemesterButton\";\nimport { Course } from \"../interfaces/course\";\n\n\n/**\n * \n * export function Calender({ setNumberOfCourses, numberOfCourses, courseID }: {\n    setNumberOfCourses: (s: number) => void,  numberOfCourses: number, courseID: number\n}):  JSX.Element {\n\n * at symbol returns \n */\n\n\nexport function DegreePlan({ SET_SEMESTER_MAP ,SEMESTER_MAP, setSemesterSelect, setSemesterHeader }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterSelect: (s: string | null) => void,\n    setSemesterHeader: (s: string) => void\n}):  JSX.Element {\n\n    const SEMESTER_MAP_TO_PRINT = {...SEMESTER_MAP};\n\n    function removeAllSemesters() {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP}; \n        for (const [key] of Object.entries(NEW_SEMESTER_MAP)) {\n            NEW_SEMESTER_MAP[key]=[];\n            SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n        }\n    }\n\n    return (\n        <div>\n            \n            <h2>Degree Plan View</h2>\n\n            <div>\n                <Container>\n                    \n                    <Row xs={2} md={2}>\n                        \n                        {Object.entries(SEMESTER_MAP_TO_PRINT).map(([key, value]) =>\n                            <Col key={key}>\n                                <SemesterComp\n                                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                                    SEMESTER_MAP={SEMESTER_MAP}\n                                    courseList={value}\n                                    setSemesterSelect={setSemesterSelect}\n                                    semesterSelect={key}\n                                    setSemesterHeader={setSemesterHeader}\n                                ></SemesterComp>\n                            </Col>\n                        )}\n                        \n                    </Row>\n                    \n                </Container>\n            </div>\n            <div>\n                <button onClick={removeAllSemesters}>Clear All Semesters</button>\n            </div>\n        </div>\n    );\n}\n\n/**\n * \n * \n * DONT DELETE!!!!\nexport function Calender():  JSX.Element {\n    return (\n        <Container>\n            <h2>Calender</h2>\n            <Row>\n                <div className=\"cal-container\">\n                    {Weekdays.map(day => \n                        <div key={day.id}>{day.name}</div>\n                    )}\n                </div>\n            </Row>\n            <Row>\n                <div className = \"cal-background\">\n                    <Col>\n                        <div>\n                            {Hours.map(value =>\n                                <div key={value.id}>{value.time}</div>\n                            )}\n                        </div>\n                    </Col>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\n\n*/\n\nexport default DegreePlan;\n","import React, { useState } from \"react\";\nimport \"./css/App.css\";\n\nimport { Course } from \"./interfaces/course\";\n\nimport { Board } from \"./components/Board\";\nimport DisplayCourses from \"./components/DisplayCourses\";\nimport SideMenu from \"./components/SideMenu\";\nimport Calender from \"./components/Calender\";\nimport DegreePlan from \"./components/DegreePlan\";\n\nfunction App(): JSX.Element {\n    const [visibleView, setVisibleView] = useState<string | null>(\"1\"); // Changes the different board views\n    const [semesterSelect, setSemesterSelect] = useState<string | null>(\"1\");\n    const [semesterHeader, setSemesterHeader] = useState<string>(\"Fall 1\");\n\n    \n    const SEMESTER_MAP_INIT: Record<string, Course[]> = {\n        \"1\": [],\n        \"2\": [],\n        \"3\": [],\n        \"4\": [],\n        \"5\": [],\n        \"6\": [],\n        \"7\": [],\n        \"8\": [],\n    };\n    const [SEMESTER_MAP, SET_SEMESTER_MAP] = useState<Record<string, Course[]>>(SEMESTER_MAP_INIT);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                UD CIS Scheduler\n                <p>Srinath Venkatesh, Elliot Tingey, Geoffrey Linderman</p>\n            </header>\n            <section className=\"cell-left\">\n                <p>Menu</p>\n                <SideMenu\n                    setVisibleView={setVisibleView}\n                ></SideMenu>\n            </section>\n            <section className=\"cell-main\">\n                { visibleView === \"1\" && <Board\n                    semesterHeader={semesterHeader}\n                    setSemesterHeader={setSemesterHeader}\n                    setSemesterSelect={setSemesterSelect}\n                    semesterSelect={semesterSelect}\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                ></Board> }\n                \n                { visibleView === \"2\" && <DegreePlan\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    setSemesterSelect={setSemesterSelect}\n                    setSemesterHeader={setSemesterHeader}\n                ></DegreePlan> }\n\n                { visibleView === \"3\" && <Calender></Calender> }\n\n                \n            </section>\n            <section className=\"cell-right\">\n                { (visibleView === \"1\" &&  <DisplayCourses\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    semesterSelect={semesterSelect}\n                ></DisplayCourses>) ||\n                (visibleView === \"2\" &&  <DisplayCourses\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    semesterSelect={semesterSelect}\n                ></DisplayCourses>) }                 \n            </section>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}