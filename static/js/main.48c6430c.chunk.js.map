{"version":3,"sources":["assets/courses.js","components/CourseComp.tsx","components/ClearSemesterButton.tsx","assets/buttonList.js","components/Board.tsx","components/SearchBar.tsx","components/DisplayCourses.tsx","components/SideMenu.tsx","components/Calender.tsx","components/SemesterComp.tsx","assets/radioToggle.js","components/DegreePlan.tsx","components/BinCourseCard.tsx","components/ClearBinButton.tsx","components/SaveBin.tsx","components/MainPage.tsx","components/LandingPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["courseData","CourseComp","course","SET_SEMESTER_MAP","SEMESTER_MAP","semesterSelect","Card","className","style","width","color","preReqCheck","Container","Row","Col","Title","name","onClick","id","NEW_SEMESTER_MAP","filter","item","removeCourse","Body","Text","credits","timeStart","timeEnd","schedule","Accordion","Item","eventKey","Header","description","ClearSemesterButton","buttonList","value","Board","setSemesterSelect","setSemesterHeader","semesterHeader","SET_SAVE_BIN","SAVE_BIN","binVisible","classListToPrint","buttonToggle","checkPreReqWarning","key","flag","forEach","ToggleButtonGroup","onChange","val","map","radio","idx","ToggleButton","type","variant","length","xs","md","AnimatePresence","motion","div","drag","dragConstraints","top","bottom","right","left","onDragEnd","includes","alert","dragElastic","initial","opacity","x","animate","exit","y","transition","ease","duration","SearchBar","setQuery","placeholder","event","target","DisplayCourses","setBinVisible","useState","query","addCourse","foundCourse","findCourse","semesterValue","preReqCount","preReq","preReqCheckCount","Object","entries","console","log","push","DropdownButton","title","Dropdown","as","post","toLowerCase","flush","SideMenu","setVisibleView","Nav","justify","defaultActiveKey","onSelect","Link","Calender","fluid","SemesterComp","courseList","SET_SELECT_MAP","SELECT_MAP","semesterIndex","selectToggle","NEW_SELECT_MAP","keys","Table","scope","SELECT_MAP_INIT","DegreePlan","SEMESTER_MAP_TO_PRINT","BinCourseCard","ClearBinButton","SaveBin","binListToPrint","Offcanvas","show","onHide","placement","scroll","backdrop","closeButton","MainPage","visibleView","LandingPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48c6430c.chunk.js","sourcesContent":["const courseData =[\n    {\n        \"id\": 0,\n        \"name\": \"CISC 100\",\n        \"timeStart\": 1200,\n        \"timeEnd\": 1300,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Science 100, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"CISC 200\",\n        \"timeStart\": 1400,\n        \"timeEnd\": 1500,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Science 200, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [\"CISC 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"CISC 300\",\n        \"timeStart\": 1200,\n        \"timeEnd\": 1300,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Science 300, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"CISC 200\", \"MATH 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"MATH 100\",\n        \"timeStart\": 1530,\n        \"timeEnd\": 1630,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Mathematics 100, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"MATH 200\",\n        \"timeStart\": 1330,\n        \"timeEnd\": 1430,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Mathematics 200, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"MATH 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"ENGL 110\",\n        \"timeStart\": 1700,\n        \"timeEnd\": 1800,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is English 110, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"CPEG 100\",\n        \"timeStart\": 1700,\n        \"timeEnd\": 1800,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Engineering 100, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"CPEG 200\",\n        \"timeStart\": 1100,\n        \"timeEnd\": 1230,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Engineering 200, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [\"CPEG 100\", \"MATH 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"CPEG 300\",\n        \"timeStart\": 900,\n        \"timeEnd\": 955,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Engineering 300, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [\"CPEG 200\", \"MATH 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"CPEG 400\",\n        \"timeStart\": 1600,\n        \"timeEnd\": 1730,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Engineering 400, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"CPEG 300\", \"MATH 200\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"MATH 300\",\n        \"timeStart\": 1100,\n        \"timeEnd\": 1230,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Mathematics 300, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"MATH 200\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 11,\n        \"name\": \"MATH 400\",\n        \"timeStart\": 1300,\n        \"timeEnd\": 1355,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Mathematics 400, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"MATH 300\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 12,\n        \"name\": \"CPEG 355\",\n        \"timeStart\": 1100,\n        \"timeEnd\": 1230,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Computer Engineering 355, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [\"CPEG 300\", \"CISC 200\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 13,\n        \"name\": \"CISC 400\",\n        \"timeStart\": 1000,\n        \"timeEnd\": 1055,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Computer Science 400, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"CISC 300\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 14,\n        \"name\": \"ENGL 200\",\n        \"timeStart\": 1100,\n        \"timeEnd\": 1230,\n        \"schedule\": \"TR\",\n        \"description\": \"This is English 200, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"ENGL 100\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 15,\n        \"name\": \"ENGL 300\",\n        \"timeStart\": 1300,\n        \"timeEnd\": 1355,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is English 300, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"ENGL 200\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 16,\n        \"name\": \"ENGL 400\",\n        \"timeStart\": 1530,\n        \"timeEnd\": 1625,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is English 400, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [\"ENGL 300\"],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 17,\n        \"name\": \"HIST 100\",\n        \"timeStart\": 1000,\n        \"timeEnd\": 1130,\n        \"schedule\": \"TR\",\n        \"description\": \"This is History 100, section 10.\",\n        \"credits\": 3,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 18,\n        \"name\": \"PHYS 100\",\n        \"timeStart\": 1300,\n        \"timeEnd\": 1430,\n        \"schedule\": \"TR\",\n        \"description\": \"This is Physics 100, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [],\n        \"preReqCheck\": \"black\"\n    },\n    {\n        \"id\": 19,\n        \"name\": \"PHYS 200\",\n        \"timeStart\": 1100,\n        \"timeEnd\": 1155,\n        \"schedule\": \"MWF\",\n        \"description\": \"This is Physics 200, section 10.\",\n        \"credits\": 4,\n        \"preReq\": [\"PHYS 100\", \"MATH 200\"],\n        \"preReqCheck\": \"black\"\n    }\n\n];\nexport default courseData;\n","import React from \"react\";\nimport { Card,Col, Row, Container, Accordion } from \"react-bootstrap/\";\nimport \"../css/courses.css\";\nimport \"../assets/courses\";\nimport { Course } from \"../interfaces/course\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nimport courseData from \"../assets/courses\";\n\n\nfunction CourseComp({ course, SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    course: Course,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    semesterSelect: string | null\n}):  JSX.Element {\n    \n    function removeCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        NEW_SEMESTER_MAP[\"\"+semesterSelect] = NEW_SEMESTER_MAP[\"\"+semesterSelect].filter(item => item !== courseData[id]);\n        SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n    }\n\n    function editDescription() {\n        <form>\n            <label>\n                Name:\n                <input type=\"text\" name=\"name\" />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>;\n    }\n\n\n    return (\n        <div>           \n            <Card className=\"card\" style={{ width: \"19rem\", color: course.preReqCheck }}>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Card.Title>{course.name}</Card.Title>\n                        </Col>\n                        <Col>\n                            <button className=\"delete-button\" onClick={() => removeCourse(course.id)}>\n                                <MdDeleteForever></MdDeleteForever></button>\n                        </Col>                        \n\n                    </Row>\n                </Container>\n                <Card.Body className=\"card-body\">\n                    <Card.Text>\n                        Credits: {course.credits}\n                    </Card.Text>\n                    <Card.Text>\n                        From: {course.timeStart} To: {course.timeEnd}\n                    </Card.Text>\n\n                    <Card.Text>\n                        Days: {course.schedule}\n                    </Card.Text>\n                    <Col className=\"column-dropdown\">\n                    </Col>\n                \n                    <Col className=\"card-accordion\">\n                        <Accordion>\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>Details</Accordion.Header>\n                                <Accordion.Body>\n                                    <button className=\"edit-button\" onClick={() => editDescription()}>\n                                        <GrEdit></GrEdit></button>\n                                    Course description: {course.description}\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </Col>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default CourseComp;\n\n/*\n            <Accordion defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Accordion Item #1</Accordion.Header>\n                    <Accordion.Body>\n                        bruh\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n*/\n","import React from \"react\";\nimport { Course } from \"../interfaces/course\";\n\nexport default function ClearSemesterButton({ SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, \n    SEMESTER_MAP: Record<string, Course[]>, semesterSelect: string | null\n}): JSX.Element {\n\n    function removeAllCourses() {\n        SET_SEMESTER_MAP({...SEMESTER_MAP, [\"\"+semesterSelect]: []}); // Set classList to an empty array to clear all selected courses\n    }\n\n    return (\n        <button onClick={removeAllCourses}>Clear All Courses</button>\n    );\n}\n","const buttonList = [\n    { name: \"Fall 1\", value: 1 },\n    { name: \"Spring 1\", value: 2 },\n    { name: \"Fall 2\", value: 3 },\n    { name: \"Spring 2\", value: 4 },\n    { name: \"Fall 3\", value: 5 },\n    { name: \"Spring 3\", value: 6 },\n    { name: \"Fall 4\", value: 7 },\n    { name: \"Spring 4\", value: 8 },\n];\nexport default buttonList;\n","import React from \"react\";\nimport { Col, Row, Container, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport CourseComp from \"./CourseComp\";\nimport ClearSemesterButton from \"./ClearSemesterButton\";\nimport \"../css/board.css\";\nimport { Course } from \"../interfaces/course\";\nimport courseData from \"../assets/courses\";\n\nimport buttonList from \"../assets/buttonList\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nexport function Board({ setSemesterSelect, semesterSelect, SET_SEMESTER_MAP, SEMESTER_MAP, setSemesterHeader, semesterHeader, SET_SAVE_BIN, SAVE_BIN, binVisible }: {\n    setSemesterSelect: (s: string | null) => void, semesterSelect: string | null,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterHeader: (s: string) => void, semesterHeader: string,\n    SET_SAVE_BIN: (s: Course[]) => void, SAVE_BIN: Course[],\n    binVisible: boolean\n}):  JSX.Element {\n\n    // const list variable to map out classList useState variable\n    const classListToPrint = SEMESTER_MAP[\"\"+semesterSelect];\n\n    const buttonToggle = \"\"+semesterSelect;\n\n    function removeCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        if (binVisible){\n            if (SAVE_BIN.includes(courseData[id])) {\n                alert(`${courseData[id].name} is already added to your bin. It will now be removed from the semester.`);\n            } else {\n                SET_SAVE_BIN([...SAVE_BIN, courseData[id]]);\n            }\n        }\n        NEW_SEMESTER_MAP[\"\"+semesterSelect] = NEW_SEMESTER_MAP[\"\"+semesterSelect].filter(item => item !== courseData[id]);\n        SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n    }\n\n    function handleSelect (val: number) {\n        setSemesterSelect(\"\"+val);\n        setSemesterHeader(buttonList[val-1].name);\n    }\n\n    function checkPreReqWarning(key: string) {\n        let flag = false;\n        SEMESTER_MAP[key].forEach(course => {\n            if(course.preReqCheck === \"red\"){\n                flag = true;\n            }\n        });\n        return flag;\n    }\n\n    return (\n        <div>\n            <div>\n                <h2>Semester View - {semesterHeader}</h2>\n                <ToggleButtonGroup className=\"semester-button\" name=\"options\" value={+buttonToggle} onChange={handleSelect}>\n                    {buttonList.map((radio, idx) =>\n                        <ToggleButton\n                            key={idx}\n                            id={`radio-${idx}`}\n                            type=\"radio\"\n                            variant={ checkPreReqWarning(\"\"+radio.value) ? \"outline-warning\" : SEMESTER_MAP[\"\"+radio.value].length > 0 ? \"outline-success\" :  \"outline-danger\" }\n                            name=\"radio\"\n                            value={radio.value}\n                        >\n                            {radio.name}\n                        </ToggleButton>\n                    )}\n                </ToggleButtonGroup>\n            </div>\n\n            <div>\n                <Container>\n                    <Row xs={1} md={3}>\n                        <AnimatePresence>\n                            {classListToPrint.map(classListToPrint =>\n                                <motion.div\n                                    key={classListToPrint.id}\n                                    drag\n                                    dragConstraints={{\n                                        top: 0,\n                                        bottom: 0,\n                                        right: 0,\n                                        left: 0\n                                    }}\n                                    onDragEnd={() => removeCourse(classListToPrint.id)}\n                                    dragElastic={1}\n                                    initial={{ opacity: 0, x: 180 }}\n                                    animate={{ opacity: 1, x: 0 }}\n                                    exit={{ opacity: 0, y: -200, x: 180 }}\n                                    transition={{\n                                        ease: \"easeInOut\",\n                                        duration: 0.4\n                                    }}>\n                                    <Col >\n                                        <CourseComp\n                                            course={classListToPrint}\n                                            SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                                            SEMESTER_MAP={SEMESTER_MAP}\n                                            semesterSelect={semesterSelect}\n                                        ></CourseComp>\n                                    </Col>\n                                </motion.div>\n                            )}\n                        </AnimatePresence>\n                    </Row>\n                </Container>\n                { SEMESTER_MAP[\"\"+semesterSelect].length > 0 && <ClearSemesterButton\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    semesterSelect={semesterSelect}\n                ></ClearSemesterButton> }\n            </div>\n\n        </div>\n    );\n}","import React from \"react\";\n\nimport \"../css/SearchBar.css\";\n\nexport default function SearchBar({ setQuery }: {\n    setQuery: (q: string) => void\n}): JSX.Element {\n    return(\n        <div>\n            <input className=\"form__field\" placeholder=\"Enter Course\" onChange={event => setQuery(event.target.value)}/>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport courseData from \"../assets/courses\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Course } from \"../interfaces/course\";\n\nimport \"../css/DisplayCourses.css\";\nimport SearchBar from \"./SearchBar\";\nimport { Accordion, Col } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\n\nexport default function DisplayCourses({ SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect, setBinVisible, binVisible, SET_SAVE_BIN, SAVE_BIN }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    semesterSelect: string | null,\n    setBinVisible: (b: boolean) => void, binVisible: boolean,\n    SET_SAVE_BIN: (s: Course[]) => void, SAVE_BIN: Course[],\n}): JSX.Element {\n\n    const [query, setQuery] = useState<string>(\"\");\n\n    function addCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        const foundCourse = findCourse(id);\n        const semesterValue = \"\"+semesterSelect;\n        const preReqCount = courseData[id].preReq.length;\n        let preReqCheckCount = 0;\n        \n        // If bin is open, add courses to bin\n        if (binVisible){\n            if (SAVE_BIN.includes(courseData[id])) {\n                alert(`${courseData[id].name} is already added to your bin. Please select another course.`);\n            } else {\n                SET_SAVE_BIN([...SAVE_BIN, courseData[id]]);\n            }\n        } else {\n            if (foundCourse) {\n                alert(`${courseData[id].name} is already added to this semester. Please select another course.`);\n            } else {\n                //  PREREQ MET IN PRIOR SEMESTER\n                for (const [key, value] of Object.entries(SEMESTER_MAP)) {\n                    console.log([key,value]);\n                    SEMESTER_MAP[key].forEach(item => {\n                        if(courseData[id].preReq.includes(item.name)) {\n                            preReqCheckCount++;\n                        }\n                    });\n                    if(+key+1 === +semesterValue) {\n                        break;\n                    }\n                }\n                if (preReqCount !== preReqCheckCount) {\n                    alert(\"Warning: Pre-Reqs not met.\");\n                    courseData[id].preReqCheck = \"red\";\n                } else {\n                    courseData[id].preReqCheck = \"black\";\n                }\n                //  DUPLICATE COURSES IN ANY SEMESTER\n                // for (const [key, value] of Object.entries(SEMESTER_MAP)) {\n                //     console.log(key,value);\n                //     if (SEMESTER_MAP[key].includes(courseData[id])) {\n                //         alert(`Warning: ${courseData[id].name} is already added to semester ${key}.`);\n                //     }\n                // }\n\n                SEMESTER_MAP[\"\"+semesterSelect].length === 6 ? alert(\"Max number of courses selected for semester.\")\n                    : (NEW_SEMESTER_MAP[\"\"+semesterSelect].push(courseData[id]), SET_SEMESTER_MAP(NEW_SEMESTER_MAP));\n\n            }\n        }\n    }\n\n    function findCourse(id: number) {\n        return SEMESTER_MAP[\"\"+semesterSelect].includes(courseData[id]);\n    }\n    \n\n    function showBin() {\n        setBinVisible(!binVisible);\n    }\n\n    return (\n        <div>\n            <div className=\"menu-button\">\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\n                    <Dropdown.Item as=\"button\">Search Course</Dropdown.Item>\n                    <Dropdown.Item as=\"button\">Degree Requirements</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" onClick={() => showBin()}>Save Courses for Later</Dropdown.Item>\n                </DropdownButton>\n            </div>\n            <SearchBar\n                setQuery={setQuery}\n            ></SearchBar>\n            <ul className=\"list-group\">\n                {courseData.filter(post => {\n                    if (query === \"\") {\n                        return post;\n                    } else if (post.name.toLowerCase().includes(query.toLowerCase())) {\n                        return post;\n                    }\n                }).map(courseData => \n                    <motion.div\n                        drag\n                        dragConstraints={{\n                            top: 0,\n                            bottom: 0,\n                            right: 0,\n                            left: 0\n                        }}\n                        onDragEnd={() => addCourse(courseData.id)}\n                        dragElastic={1}\n                        key={courseData.id}\n                        initial={{ opacity: 0, x: 180 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{\n                            ease: \"easeInOut\",\n                            duration: 1,\n                        }}>\n                        <li className=\"course\" key={courseData.id}>{courseData.name}\n                            <button className=\"add-button\" onClick={() => addCourse(courseData.id)}>\n                                <MdAdd />\n                            </button>\n                            { courseData.preReq.length > 0 && <Col className=\"prereq-accordion\">\n                                <Accordion flush>\n                                    <Accordion.Item eventKey=\"0\">\n                                        <Accordion.Header>Prerequisites</Accordion.Header>\n                                        <Accordion.Body>\n                                            {courseData.preReq.map(course => \n                                                <div key={course}>{course}</div>\n                                            )}\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                                <p></p>\n                            </Col> }\n                        </li>\n                    </motion.div>\n                )}\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap/\";\n\nexport default function SideMenu( {setVisibleView} : {\n    setVisibleView: (s: string | null) => void\n}): JSX.Element {\n\n    const handleSelect = (eventKey: string | null) => setVisibleView(eventKey);\n\n    return (\n        <Nav justify variant=\"pills\" className=\"flex-column\" defaultActiveKey=\"2\" onSelect={handleSelect}>\n            <Nav.Item>\n                <Nav.Link eventKey=\"2\">Semester View</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"3\">Degree Plan View</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"4\">Calendar View</Nav.Link>\n            </Nav.Item>\n  \n        </Nav>\n    );\n}","import React from \"react\";\nimport { Row, Col, Container} from \"react-bootstrap\";\nimport \"../css/calender.css\";\n//import { Weekday, Date } from \"../interfaces/weekday\";\n//import Weekdays from \"../assets/weekdays\";\n//import Hours from \"../assets/hours\";\n\n/**\n * \n * export function Calender({ setNumberOfCourses, numberOfCourses, courseID }: {\n    setNumberOfCourses: (s: number) => void,  numberOfCourses: number, courseID: number\n}):  JSX.Element {\n\n * at symbol returns \n */\n\nexport function Calender():  JSX.Element {\n    return (\n        <div>\n            <Container fluid>\n              \n                <h2>Calender</h2>\n                <Container className=\"cal-header\">\n                    <Row className=\"row justify-content-evenly no-gutters\">\n                        <Col className=\"col-1\">\n                            <h5>Hours</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Monday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Tuesday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Wednesday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Thursday</h5>\n                        </Col>\n                        <Col className=\"col-2\">\n                            <h5>Friday</h5>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </Container>    \n        </div>\n    );\n}\n\n/**\n * \n * \n * DONT DELETE!!!!\nexport function Calender():  JSX.Element {\n    return (\n        <Container>\n            <h2>Calender</h2>\n            <Row>\n                <div className=\"cal-container\">\n                    {Weekdays.map(day => \n                        <div key={day.id}>{day.name}</div>\n                    )}\n                </div>\n            </Row>\n            <Row>\n                <div className = \"cal-background\">\n                    <Col>\n                        <div>\n                            {Hours.map(value =>\n                                <div key={value.id}>{value.time}</div>\n                            )}\n                        </div>\n                    </Col>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\n\n*/\n\nexport default Calender;","import React from \"react\";\nimport { Card, Table } from \"react-bootstrap/\";\nimport \"../css/courses.css\";\nimport \"../assets/courses\";\nimport { Course } from \"../interfaces/course\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { ImCross, ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\n\nimport courseData from \"../assets/courses\";\nimport buttonList from \"../assets/buttonList\";\n\nfunction SemesterComp({ SET_SEMESTER_MAP, SEMESTER_MAP, courseList, setSemesterSelect, semesterSelect, setSemesterHeader, SET_SELECT_MAP, SELECT_MAP }: {\n    courseList: Course[],\n    setSemesterSelect: (s: string | null) => void, semesterSelect: string | null,\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterHeader: (s: string) => void,\n    SET_SELECT_MAP: (s: Record<string, boolean>) => void, SELECT_MAP: Record<string, boolean>\n}):  JSX.Element {\n\n    const semesterIndex = \"\"+semesterSelect;\n\n    function selectToggle(key: string) {\n        const NEW_SELECT_MAP = {...SELECT_MAP};\n        \n        Object.keys(NEW_SELECT_MAP).forEach(item => {\n            item === key ? NEW_SELECT_MAP[+item] = true : NEW_SELECT_MAP[+item] = false;\n            SET_SELECT_MAP(NEW_SELECT_MAP);\n        });\n\n        setSemesterSelect(key);\n        handleSelect(key);\n    }\n\n    function handleSelect (val: string) {\n        setSemesterHeader(buttonList[+val-1].name);\n    }\n\n    function removeCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        NEW_SEMESTER_MAP[\"\"+semesterSelect] = NEW_SEMESTER_MAP[\"\"+semesterSelect].filter(item => item !== courseData[id]);\n        SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n        setSemesterSelect(semesterSelect);\n    }\n\n    function removeAllCourses() {\n        SET_SEMESTER_MAP({...SEMESTER_MAP, [\"\"+semesterSelect]: []}); // Set classList to an empty array to clear all selected courses\n    }\n\n    return (\n        <div>\n            <Card className=\"card\" style={{ width: \"30rem\" }}>\n                <button className=\"delete-button\" onClick={removeAllCourses}>\n                    <MdDeleteForever></MdDeleteForever>\n                </button>\n                { !SELECT_MAP[+semesterIndex] && <button className=\"select-button-off\" onClick={() => selectToggle(\"\"+semesterSelect)}>\n                    <ImRadioUnchecked></ImRadioUnchecked> \n                </button>}\n                { SELECT_MAP[+semesterIndex] && <button className=\"select-button-on\" onClick={() => selectToggle(\"\"+semesterSelect)}>\n                    <ImRadioChecked></ImRadioChecked>\n                </button>}\n                <Card.Body className=\"card-body\">\n                    \n                    <Table>\n                        <thead>\n                            <th className=\"semester-title\">{buttonList[+semesterIndex-1].name}</th>\n                            <tr>\n                                <th>Course</th>\n                                <th scope=\"col\">Credit(s)</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {courseList.map((course, id) =>\n\n                                <tr key={id}>\n                                    <th>{course.name}</th>\n                                    <td>{course.credits}</td>\n                                    <button className=\"delete-course\" onClick={() => removeCourse(course.id)}>\n                                        <ImCross></ImCross>\n                                    </button>\n                                </tr>\n\n                            )}\n                        </tbody>\n                    </Table>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default SemesterComp;\n","const SELECT_MAP_INIT = {\n    \"1\": false,\n    \"2\": false,\n    \"3\": false,\n    \"4\": false,\n    \"5\": false,\n    \"6\": false,\n    \"7\": false,\n    \"8\": false\n};\nexport default SELECT_MAP_INIT;\n","import React, { useState } from \"react\";\nimport { Row, Col, Container} from \"react-bootstrap\";\nimport \"../css/calender.css\";\n// import CourseComp from \"./CourseComp\";\nimport SemesterComp from \"./SemesterComp\";\n// import ClearSemesterButton from \"./ClearSemesterButton\";\nimport { Course } from \"../interfaces/course\";\nimport SELECT_MAP_INIT from \"../assets/radioToggle\";\n\n/**\n * \n * export function Calender({ setNumberOfCourses, numberOfCourses, courseID }: {\n    setNumberOfCourses: (s: number) => void,  numberOfCourses: number, courseID: number\n}):  JSX.Element {\n\n * at symbol returns \n */\n\n\nexport function DegreePlan({ SET_SEMESTER_MAP ,SEMESTER_MAP, setSemesterSelect, setSemesterHeader }: {\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    setSemesterSelect: (s: string | null) => void,\n    setSemesterHeader: (s: string) => void\n}):  JSX.Element {\n\n    const [SELECT_MAP, SET_SELECT_MAP] = useState<Record<string, boolean>>(SELECT_MAP_INIT);\n\n    const SEMESTER_MAP_TO_PRINT = {...SEMESTER_MAP};\n\n    function removeAllSemesters() {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP}; \n        for (const [key] of Object.entries(NEW_SEMESTER_MAP)) {\n            NEW_SEMESTER_MAP[key]=[];\n            SET_SEMESTER_MAP(NEW_SEMESTER_MAP);\n        }\n    }\n\n    return (\n        <div>\n            \n            <h2>Degree Plan View</h2>\n\n            <div>\n                <Container>\n                    \n                    <Row xs={2} md={2}>\n                        \n                        {Object.entries(SEMESTER_MAP_TO_PRINT).map(([key, value]) =>\n                            <Col key={key}>\n                                <SemesterComp\n                                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                                    SEMESTER_MAP={SEMESTER_MAP}\n                                    courseList={value}\n                                    setSemesterSelect={setSemesterSelect}\n                                    semesterSelect={key}\n                                    setSemesterHeader={setSemesterHeader}\n                                    SET_SELECT_MAP={SET_SELECT_MAP}\n                                    SELECT_MAP={SELECT_MAP}\n                                ></SemesterComp>\n                            </Col>\n                        )}\n                        \n                    </Row>\n                    \n                </Container>\n            </div>\n            <div>\n                <button onClick={removeAllSemesters}>Clear All Semesters</button>\n            </div>\n        </div>\n    );\n}\n\n/**\n * \n * \n * DONT DELETE!!!!\nexport function Calender():  JSX.Element {\n    return (\n        <Container>\n            <h2>Calender</h2>\n            <Row>\n                <div className=\"cal-container\">\n                    {Weekdays.map(day => \n                        <div key={day.id}>{day.name}</div>\n                    )}\n                </div>\n            </Row>\n            <Row>\n                <div className = \"cal-background\">\n                    <Col>\n                        <div>\n                            {Hours.map(value =>\n                                <div key={value.id}>{value.time}</div>\n                            )}\n                        </div>\n                    </Col>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\n\n*/\n\nexport default DegreePlan;\n","import React from \"react\";\nimport { Card,Col, Row, Container, Accordion } from \"react-bootstrap/\";\nimport \"../css/courses.css\";\nimport \"../assets/courses\";\nimport { Course } from \"../interfaces/course\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nimport courseData from \"../assets/courses\";\n\nexport default function BinCourseCard({ course, SET_SAVE_BIN, SAVE_BIN }: {\n    course: Course,\n    SET_SAVE_BIN: (b: Course[]) => void, SAVE_BIN: Course[]\n}): JSX.Element {\n    \n    function editDescription() {\n        <form>\n            <label>\n                Name:\n                <input type=\"text\" name=\"name\" />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>;\n    }\n\n    function removeCourse(id: number) {\n        SET_SAVE_BIN(SAVE_BIN.filter(item => item !== courseData[id]));\n    }\n\n    return (\n        <div>           \n            <Card className=\"card\" style={{ width: \"19rem\" }}>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Card.Title>{course.name}</Card.Title>\n                        </Col>\n                        <Col>\n                            <button className=\"delete-button\" onClick={() => removeCourse(course.id)}>\n                                <MdDeleteForever></MdDeleteForever></button>\n                        </Col>                        \n\n                    </Row>\n                </Container>\n                <Card.Body className=\"card-body\">\n                    <Card.Text>\n                        Credits: {course.credits}\n                    </Card.Text>\n                    <Card.Text>\n                        From: {course.timeStart} To: {course.timeEnd}\n                    </Card.Text>\n\n                    <Card.Text>\n                        Days: {course.schedule}\n                    </Card.Text>\n                    <Col className=\"column-dropdown\">\n                    </Col>\n                  \n                    <Col className=\"card-accordion\">\n                        <Accordion>\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>Details</Accordion.Header>\n                                <Accordion.Body>\n                                    <button className=\"edit-button\" onClick={() => editDescription()}>\n                                        <GrEdit></GrEdit></button>\n                                    Course description: {course.description}\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </Col>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Course } from \"../interfaces/course\";\n\nexport default function ClearBinButton({ SET_SAVE_BIN }: {\n    SET_SAVE_BIN: (b: Course[]) => void\n}): JSX.Element {\n\n    function ClearBin() {\n        SET_SAVE_BIN([]);\n    }\n    \n    return(\n        <button onClick={() => ClearBin()}>Clear Bin</button>\n    );\n}\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { Col, Container, Offcanvas, Row } from \"react-bootstrap\";\n\nimport \"../css/SaveBin.css\";\nimport { Course } from \"../interfaces/course\";\nimport courseData from \"../assets/courses\";\nimport BinCourseCard from \"./BinCourseCard\";\nimport ClearBinButton from \"./ClearBinButton\";\n\nexport default function SaveBin({ setBinVisible, binVisible, SET_SAVE_BIN, SAVE_BIN, SET_SEMESTER_MAP, SEMESTER_MAP, semesterSelect }: {\n    setBinVisible: (b: boolean) => void, binVisible: boolean,\n    SET_SAVE_BIN: (s: Course[]) => void, SAVE_BIN: Course[],\n    SET_SEMESTER_MAP: (m: Record<string, Course[]>) => void, SEMESTER_MAP: Record<string, Course[]>,\n    semesterSelect: string | null\n}): JSX.Element {\n\n    // const list variable to map out SAVE_BIN useState variable\n    const binListToPrint = SAVE_BIN;\n\n    function addCourse(id: number) {\n        const NEW_SEMESTER_MAP = {...SEMESTER_MAP};\n        \n        // If there are less than 6 courses, add the selected course onto the end of the classList\n        if (SEMESTER_MAP[\"\"+semesterSelect].includes(courseData[id])) {\n            alert(`${courseData[id].name} is already added to this semester. Please select another course.`);\n        } else {\n            // for (const [key, value] of Object.entries(SEMESTER_MAP)) {\n            //     console.log(key,value);\n            //     if (SEMESTER_MAP[key].includes(courseData[id])) {\n            //         alert(`Warning: ${courseData[id].name} is already added to semester ${key}.`);\n            //     }\n            // }\n\n            // After adding course to the semester, remove it from the save-later bin\n            SEMESTER_MAP[\"\"+semesterSelect].length === 6 ? alert(\"Max number of courses selected for semester.\")\n                : (NEW_SEMESTER_MAP[\"\"+semesterSelect].push(courseData[id]), SET_SEMESTER_MAP(NEW_SEMESTER_MAP),\n                removeCourse(id));\n        }\n\n        \n\n    }\n\n    function removeCourse(id: number) {\n        SET_SAVE_BIN(SAVE_BIN.filter(item => item !== courseData[id]));\n    }\n    \n    return(\n        <div>\n            <Offcanvas className=\"bin\" show={binVisible} onHide={() => setBinVisible(false)} placement=\"bottom\" scroll={true} backdrop={false}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Save For Later</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body className=\"bin-body\">\n                    <ClearBinButton\n                        SET_SAVE_BIN={SET_SAVE_BIN}\n                    ></ClearBinButton>\n                    <Container>\n                        <Row xs={1} md={3}>\n                            <AnimatePresence>\n                                {binListToPrint.map(binListToPrint =>\n                                    <motion.div\n                                        key={binListToPrint.id}\n                                        drag\n                                        dragConstraints={{\n                                            top: 0,\n                                            bottom: 0,\n                                            right: 0,\n                                            left: 0\n                                        }}\n                                        onDragEnd={() => addCourse(binListToPrint.id)}\n                                        dragElastic={1}\n                                        initial={{ opacity: 0, x: 180 }}\n                                        animate={{ opacity: 1, x: 0 }}\n                                        exit={{ opacity: 0, y: -200, x: 180 }}\n                                        transition={{\n                                            ease: \"easeInOut\",\n                                            duration: 0.4\n                                        }}>\n                                        <Col >\n                                            <BinCourseCard\n                                                course={binListToPrint}\n                                                SET_SAVE_BIN={SET_SAVE_BIN}\n                                                SAVE_BIN={SAVE_BIN}\n                                            ></BinCourseCard>\n                                        </Col>\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </Row>\n                    </Container>\n                </Offcanvas.Body>\n            </Offcanvas>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport \"../css/App.css\";\n\nimport { Course } from \"../interfaces/course\";\n\nimport { Board } from \"../components/Board\";\nimport DisplayCourses from \"../components/DisplayCourses\";\nimport SideMenu from \"../components/SideMenu\";\nimport Calender from \"../components/Calender\";\nimport DegreePlan from \"../components/DegreePlan\";\nimport SaveBin from \"./SaveBin\";\n\nfunction MainPage({ visibleView, setVisibleView }: {\n    setVisibleView: (s: string | null) => void, visibleView: string | null\n}): JSX.Element {\n    const [semesterSelect, setSemesterSelect] = useState<string | null>(\"1\");\n    const [semesterHeader, setSemesterHeader] = useState<string>(\"Fall 1\");\n\n    //Pre-req Check Variables\n    \n    // Bin Variables\n    const [binVisible, setBinVisible] = useState<boolean>(false);\n    const SAVE_BIN_INIT: Course[] = [];\n    const [SAVE_BIN, SET_SAVE_BIN] = useState<Course[]>(SAVE_BIN_INIT);\n   \n    const SEMESTER_MAP_INIT: Record<string, Course[]> = {\n        \"1\": [],\n        \"2\": [],\n        \"3\": [],\n        \"4\": [],\n        \"5\": [],\n        \"6\": [],\n        \"7\": [],\n        \"8\": [],\n    };\n    const [SEMESTER_MAP, SET_SEMESTER_MAP] = useState<Record<string, Course[]>>(SEMESTER_MAP_INIT);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                UD CIS Scheduler\n                <p>Srinath Venkatesh, Elliot Tingey, Geoffrey Linderman</p>\n            </header>\n            <section className=\"cell-left\">\n                <p>Menu</p>\n                <SideMenu\n                    setVisibleView={setVisibleView}\n                ></SideMenu>\n            </section>\n            <section className=\"cell-main\">\n                { visibleView === \"2\" && <Board\n                    semesterHeader={semesterHeader}\n                    setSemesterHeader={setSemesterHeader}\n                    setSemesterSelect={setSemesterSelect}\n                    semesterSelect={semesterSelect}\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    SET_SAVE_BIN={SET_SAVE_BIN}\n                    SAVE_BIN={SAVE_BIN}\n                    binVisible={binVisible}\n                ></Board> }\n                \n                { visibleView === \"3\" && <DegreePlan\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    setSemesterSelect={setSemesterSelect}\n                    setSemesterHeader={setSemesterHeader}\n                ></DegreePlan> }\n\n                { visibleView === \"4\" && <Calender></Calender> }\n\n                \n            </section>\n            <section className=\"cell-right\">\n                { (visibleView === \"2\" || visibleView === \"3\") &&  <DisplayCourses\n                    SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                    SEMESTER_MAP={SEMESTER_MAP}\n                    semesterSelect={semesterSelect}\n                    setBinVisible={setBinVisible}\n                    binVisible={binVisible}\n                    SET_SAVE_BIN={SET_SAVE_BIN}\n                    SAVE_BIN={SAVE_BIN}\n                ></DisplayCourses> }            \n            </section>\n\n            <SaveBin\n                setBinVisible={setBinVisible}\n                binVisible={binVisible}\n                SET_SAVE_BIN={SET_SAVE_BIN}\n                SAVE_BIN={SAVE_BIN}\n                SET_SEMESTER_MAP={SET_SEMESTER_MAP}\n                SEMESTER_MAP={SEMESTER_MAP}\n                semesterSelect={semesterSelect}\n            ></SaveBin>\n        </div>\n    );\n}\n\nexport default MainPage;\n","import React from \"react\";\n\nimport \"../css/LandingPage.css\";\n\nexport default function LandingPage({ setVisibleView }: {\n    setVisibleView: (s: string | null) => void\n}): JSX.Element {\n\n    function changeView() {\n        setVisibleView(\"2\");\n        //setTimeout(() => setVisibleView(\"2\"), 2000);\n    }\n\n    return(\n        <div className=\"home\">\n            <div className=\"centered\">\n                <h1>UD CIS Scheduler</h1>\n                <h2>Start Building Your Plan</h2>\n                <button onClick={() => changeView()}>Enter</button>\n            </div>\n        </div>\n    );\n\n}","import React, { useState } from \"react\";\nimport \"./css/App.css\";\n\nimport MainPage from \"./components/MainPage\";\nimport LandingPage from \"./components/LandingPage\";\n\nfunction App(): JSX.Element {\n    const [visibleView, setVisibleView] = useState<string | null>(\"0\"); // Changes the different board views\n\n    return (\n        <div>\n            \n            {visibleView === \"0\" && <LandingPage\n                setVisibleView={setVisibleView}\n            ></LandingPage> }\n        \n            {visibleView !== \"0\" && <MainPage\n                setVisibleView={setVisibleView}\n                visibleView={visibleView}\n            ></MainPage> }\n        \n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}